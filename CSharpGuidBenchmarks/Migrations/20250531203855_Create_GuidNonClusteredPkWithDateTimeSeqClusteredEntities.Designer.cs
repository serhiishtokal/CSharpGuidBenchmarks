// <auto-generated />
using System;
using CSharpGuidBenchmarks.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharpGuidBenchmarks.Migrations
{
    [DbContext(typeof(BenchmarkDbContext))]
    [Migration("20250531203855_Create_GuidNonClusteredPkWithDateTimeSeqClusteredEntities")]
    partial class Create_GuidNonClusteredPkWithDateTimeSeqClusteredEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.GuidPkEntities.GuidV4Bin16ClusteredPkEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("GuidV4Bin16ClusteredPkEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.GuidPkEntities.GuidV4ClusteredPkEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("GuidV4ClusteredPkEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.GuidPkEntities.GuidV7Bin16ClusteredPkEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("GuidV7Bin16ClusteredPkEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.GuidPkEntities.GuidV7ClusteredPkEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("GuidV7ClusteredPkEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.IntClusteredPkEntity", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("IntClusteredPrimaryKeyEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.IntClusteredPkWithGuidAlternate.IntClusteredPkWithAlternateGuidV4Bin16Entity", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<byte[]>("AlternateKey")
                        .IsRequired()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasAlternateKey("AlternateKey");

                    b.ToTable("IntClusteredPkWithAlternateGuidV4Bin16Entities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.IntClusteredPkWithGuidAlternate.IntClusteredPkWithAlternateGuidV4Entity", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<Guid>("AlternateKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasAlternateKey("AlternateKey");

                    b.ToTable("IntClusteredPkWithAlternateGuidV4Entities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.IntClusteredPkWithGuidAlternate.IntClusteredPkWithAlternateGuidV7Bin16Entity", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<byte[]>("AlternateKey")
                        .IsRequired()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasAlternateKey("AlternateKey");

                    b.ToTable("IntClusteredPkWithAlternateGuidV7Bin16Entities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.ClusteredPrimaryKeyEntities.IntClusteredPkWithGuidAlternate.IntClusteredPkWithAlternateGuidV7Entity", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<Guid>("AlternateKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasAlternateKey("AlternateKey");

                    b.ToTable("IntClusteredPkWithAlternateGuidV7Entities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.DateTimeSeqClusteredEntities.GuidV4Bin16NonClusteredPkWithDateTimeClusteredEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<DateTime>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV4Bin16NonClusteredPkWithDateTimeSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.DateTimeSeqClusteredEntities.GuidV4NonClusteredPkWithDateTimeClusteredEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV4NonClusteredPkWithDateTimeSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.DateTimeSeqClusteredEntities.GuidV7Bin16NonClusteredPkWithDateTimeClusteredEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<DateTime>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV7Bin16NonClusteredPkWithDateTimeSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.DateTimeSeqClusteredEntities.GuidV7NonClusteredPkWithDateTimeClusteredEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV7NonClusteredPkWithDateTimeSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.IntEntities.GuidV4Bin16NonClusteredPkWithIntSeqClusteredEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<int>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV4Bin16NonClusteredPkWithIntSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.IntEntities.GuidV4NonClusteredPkWithIntSeqClusteredEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV4NonClusteredPkWithIntSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.IntEntities.GuidV7Bin16NonClusteredPkWithIntSeqClusteredEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<int>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV7Bin16NonClusteredPkWithIntSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.IntEntities.GuidV7NonClusteredPkWithIntSeqClusteredEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV7NonClusteredPkWithIntSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.LongEntities.GuidV4Bin16NonClusteredPkWithLongSeqClusteredEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<long>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV4Bin16NonClusteredPkWithLongSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.LongEntities.GuidV4NonClusteredPkWithLongSeqClusteredEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV4NonClusteredPkWithLongSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.LongEntities.GuidV7Bin16NonClusteredPkWithLongSeqClusteredEntity", b =>
                {
                    b.Property<byte[]>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<long>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV7Bin16NonClusteredPkWithLongSeqClusteredEntities");
                });

            modelBuilder.Entity("CSharpGuidBenchmarks.Entities.NonClusteredPrimaryKeyEntities.Guids.SeqClusteredIndexEntities.LongEntities.GuidV7NonClusteredPkWithLongSeqClusteredEntity", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("AlternateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AlternateKey"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrimaryKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PrimaryKey"), false);

                    b.HasAlternateKey("AlternateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("AlternateKey"));

                    b.ToTable("GuidV7NonClusteredPkWithLongSeqClusteredEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
